<?xml version="1.0" encoding="UTF-8"?>

<project
    name="xpants"
    xmlns:if="ant:if"
    xmlns:unless="ant:unless">

    <description>
---
Project:     XPants
Title:       build.xml
Date:        2018-02-14
Author:      Philip Hodder
Contact:     philip.hodder@encodis.com
Summary:     Build file for XPants
...
    </description>

    <!-- load ant-contrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <!-- include macros/properties -->
    <property environment="env"/>

    <property file="build.properties"/>

    <property name="src.dir" value="src"/>
    <property name="docs.dir" value="docs"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="install.dir" value="/usr/local/lib/${ant.project.name}"/>

    <property name="dist.file" value="${ant.project.name}-${version.number}.zip"/>
    <property name="jar.file" value="${ant.project.name}-${version.number}.jar"/>

    <!-- use local not deployed versions of macros -->
    <!-- <property name="xpants.dir" value="${src.dir}"/> -->

    <!-- load default properties -->
    <property file="${src.dir}/xpants.properties"/>

    <!-- include all macros (locally) -->
    <include file="${src.dir}/xpants.xml"/>

    <!-- TODO targets for "local-deploy", "build-distribution" and "install"? Also "test" -->

    <target
        name="clean"
        description="Clean build folder">

        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
    </target>


    <target
        name="docs"
        description="Extract Markdown documentation from macro files and create HTML files">

        <mkdir dir="${build.md.dir}"/>

        <extract-markdown-from-ant
            output="${build.md.dir}">

            <fileset dir="${src.dir}"/>
        </extract-markdown-from-ant>

        <copy
            todir="${build.md.dir}">
            <fileset dir="${docs.dir}" includes="*.md"/>
        </copy>

        <delete dir="${build.deploy.dir}"/>
        <mkdir dir="${build.deploy.dir}"/>
        <mkdir dir="${build.deploy.dir}/${docs.dir}"/>

        <convert-markdown
            output="${build.deploy.dir}/${docs.dir}"
            format="html"
            header="${source.dir}/default-header.md">
            <fileset dir="${build.md.dir}">
                <include name="*.md"/>
            </fileset>
        </convert-markdown>
    </target>


    <target
        name="build"
        description="Assemble files for deployment">

        <delete dir="${build.dir}/com/encodis/xpants"/>
        <mkdir dir="${build.dir}/com/encodis/xpants"/>

        <delete dir="${build.dir}/temp"/>
        <mkdir dir="${build.dir}/temp"/>

        <mkdir dir="${dist.dir}"/>

        <apply-stylesheet
            output="${build.dir}/temp"
            stylesheet="./src/xslt/extract-macrodef.xsl">

            <fileset dir="${src.dir}">
                <include name="*.xml"/>
                <exclude name="xpants.xml"/>
                <exclude name="antlib.xml"/>
            </fileset>
        </apply-stylesheet>

        <concat
            destfile="${build.dir}/com/encodis/xpants/xpants.xml">
            <header>&lt;antlib&gt;</header>
            <footer>&lt;/antlib&gt;</footer>
            <fileset dir="${build.dir}/temp" includes="*.xml"/>
        </concat>

        <delete dir="${build.dir}/temp"/>

        <jar
            destfile="${dist.dir}/${jar.file}">

            <fileset dir="${build.dir}">
                <include name="**/*"/>
            </fileset>
        </jar>
    </target>


    <target
        name="deploy"
        description="Copy all deployable items to the production environment"
        depends="build">

        <!-- deploy all modules to same location -->
        <deploy-files
            target="${deploy.target}"
            overwrite="true"
            verify="false"
            flatten="false"
            source="${build.deploy.dir}"/>

        <deploy-files
            target="${install.deploy.target}"
            overwrite="true"
            verify="false">

            <fileset dir="${build.dir}" includes="${zip.file}"/>
            <fileset dir="${src.dir}" includes="${install.script}"/>
        </deploy-files>
    </target>

    <target
        name="local-install"
        description="Deploy to local folder">

        <copy todir="${install.dir}">

            <fileset dir="${src.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>

    </target>


</project>
