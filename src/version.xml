<?xml version="1.0" encoding="UTF-8"?>

<project
    name="version"
    xmlns:if="ant:if"
    xmlns:unless="ant:unless">

    <description>
---
project:    XML Practical ANT Scripts
title:      version.xml
date:       2018-02-27
author:     Philip Hodder
contact:    philip.hodder@encodis.com
summary:    Macros to manipulate version numbers
...

# version.xml

This module defines macros for retrieving and manipulating version and build numbers stored in a
properties file (the default is "build.properties").

The properties file is assumed to declare either a *version.number* property or a *build.number*
property, or both. Optionally, it can contain a *release.stage*.

Full semantic versioning of the *version.number* property is assumed. The *build.number* is assumed
to be an unsigned integer:

```
version.number=1.4.2
build.number=32
release.stage=RC2
```

The *release.stage* can only be explicitly set using the `&lt;release-stage-set&gt;`, which only
accepts the following values: "pre-alpha", "alpha", "beta", "rc1", "rc2" and "stable".

## Usage

To update the **build.properties** file by incrementing the "major" version number:

```
&lt;version-inc-major/&gt;
```

To update the **build.properties** file by incrementing the "minor" version number by 2:

```
&lt;version-inc-minor increment="2"/&gt;
```

To update the **build.properties** file by setting the version number explicitly:

```
&lt;version-number-set version="3.1.4"/&gt;
```

To update the **build.properties** file by incrementing the build number:

```
&lt;version-inc number="build"/&gt;
```

## Dependencies

*   A **build.properties** file (or equivalent) must be available

## Properties


## Change Log

##### 2018-02-14 (PH) Initial version

    </description>

    <!-- load ant-contrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <!-- include macros/properties -->
    <dirname property="xpants.dir" file="${ant.file.version}"/>

    <include file="${xpants.dir}/attr-checks.xml"/>
    <include file="${xpants.dir}/file-checks.xml"/>

    <!-- macros -->

    <macrodef
        name="version-inc"
        description="Update a version number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="increment"
            default="1"
            description="Amount to increment version number"/>

        <attribute
            name="number"
            default="patch"
            description="Version number element to increment [major,minor,patch,build]"/>

        <sequential>

            <!-- fail if required attributes not set -->
            <check-attr-set macro="version-inc" name="increment" value="@{increment}"/>
            <check-attr-list macro="version-inc" name="number" value="@{number}" list="major,minor,patch,build"/>

            <!-- check properties file exists -->
            <check-file-exists macro="version-inc" file="@{file}"/>

            <!-- get version properties from file -->
            <property file="@{file}"/>

            <!-- fail if version.number not set (e.g. not in build.properties file) -->
            <fail message="[version-inc] property 'version.number' not set">
                <condition>
                    <not><isset property="version.number"/></not>
                </condition>
            </fail>

            <!-- split into major, minor, patch - build number obtained directly from properties file -->
            <local name="version.number.major"/>
            <propertyregex
                property="version.number.major"
                input="${version.number}"
                regexp="([0-9]+)\.([0-9]+)\.([0-9]+)"
                select="\1"/>

            <local name="version.number.minor"/>
            <propertyregex
                property="version.number.minor"
                input="${version.number}"
                regexp="([0-9]+)\.([0-9]+)\.([0-9]+)"
                select="\2"/>

            <local name="version.number.patch"/>
            <propertyregex
                property="version.number.patch"
                input="${version.number}"
                regexp="([0-9]+)\.([0-9]+)\.([0-9]+)"
                select="\3"/>

            <!-- increment depending on @{number} -->
            <local name="increment.@{number}"/>
            <property name="increment.@{number}" value="true"/>

            <var name="version.major" value="${version.number.major}"/>
            <var name="version.minor" value="${version.number.minor}"/>
            <var name="version.patch" value="${version.number.patch}"/>

            <math result="version.major"
                operand1="${version.major}"
                operation="add"
                operand2="@{increment}"
                datatype="int"
                if:set="increment.major"/>

            <math result="version.minor"
                operand1="${version.minor}"
                operation="add"
                operand2="@{increment}"
                datatype="int"
                if:set="increment.minor"/>

            <math result="version.patch"
                operand1="${version.patch}"
                operation="add"
                operand2="@{increment}"
                datatype="int"
                if:set="increment.patch"/>

            <math result="build.number.update"
                operand1="${build.number}"
                operation="add"
                operand2="@{increment}"
                datatype="int"
                if:set="increment.build"/>

            <!-- set new version number -->
            <version-number-set file="@{file}" version="${version.major}.${version.minor}.${version.patch}" unless:set="increment.build"/>

            <!-- set new build number -->
            <build-number-set file="@{file}" build="${build.number.update}" if:set="increment.build"/>

        </sequential>
    </macrodef>


    <macrodef
        name="version-inc-major"
        description="Increment the major version number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="increment"
            default="1"
            description="Amount to increment version number"/>

        <sequential>

            <version-inc
                file="@{file}"
                increment="@{increment}"
                number="major"/>

        </sequential>
    </macrodef>


    <macrodef
        name="version-inc-minor"
        description="Increment the minor version number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="increment"
            default="1"
            description="Amount to increment version number"/>

        <sequential>

            <version-inc
                file="@{file}"
                increment="@{increment}"
                number="minor"/>

        </sequential>
    </macrodef>


    <macrodef
        name="version-inc-patch"
        description="Increment the patch version number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="increment"
            default="1"
            description="Amount to increment version number"/>

        <sequential>

            <version-inc
                file="@{file}"
                increment="@{increment}"
                number="patch"/>

        </sequential>
    </macrodef>


    <macrodef
        name="version-inc-build"
        description="Increment the build number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="increment"
            default="1"
            description="Amount to increment version number"/>

        <sequential>

            <version-inc
                file="@{file}"
                increment="@{increment}"
                number="build"/>

        </sequential>
    </macrodef>


    <macrodef
        name="version-number-set"
        description="Set the version number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="version"
            description="New version number"/>

        <sequential>

            <!-- use var and replaceregexp to overwrite version.number -->
            <var name="version.number" unset="true"/>
            <property name="version.number" value="@{version}"/>

            <!-- update properties file -->
            <replaceregexp
                file="@{file}"
                match="version.number=[0-9\.]+"
                replace="version.number=@{version}"
                byline="true"/>

            <echo message="[version-number-set] version.number = '@{version}'"/>

        </sequential>
    </macrodef>


    <macrodef
        name="build-number-set"
        description="Set the build number">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="build"
            description="New build number"/>

        <sequential>

            <!-- use var and replaceregexp to overwrite build.number -->
            <var name="build.number" unset="true"/>
            <property name="build.number" value="@{build}"/>

            <!-- update properties file -->
            <replaceregexp
                file="@{file}"
                match="build.number=[0-9]+"
                replace="build.number=@{build}"
                byline="true"/>

            <echo message="[build-number-set] build.number = '@{build}'"/>

        </sequential>
    </macrodef>

    <macrodef
        name="release-stage-set"
        description="Set the release stage">

        <attribute
            name="file"
            default="build.properties"
            description="Properties file for version information"/>

        <attribute
            name="stage"
            description="New release stage [pre-alpha,alpha,beta,rc1,rc2,stable]"/>

        <sequential>

            <!-- check allowed stage name -->
            <check-attr-list macro="release-stage-set" name="stage" value="@{stage}" list="pre-alpha,alpha,beta,rc1,rc2,stable"/>

            <!-- use var and replaceregexp to overwrite release.stage -->
            <var name="release.stage" unset="true"/>
            <property name="release.stage" value="@{stage}"/>

            <!-- update properties file -->
            <replaceregexp
                file="@{file}"
                match="release.stage=(pre-alpha|alpha|beta|rc1|rc2|stable)"
                replace="release.stage=@{stage}"
                byline="true"/>

            <echo message="[release-stage-set] release.stage = '@{stage}'"/>

        </sequential>
    </macrodef>

</project>
